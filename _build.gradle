import org.jetbrains.grammarkit.tasks.*

plugins {
    id 'org.jetbrains.intellij' version "1.3.2"
    id "org.jetbrains.grammarkit" version "2021.2.1"
}

sourceSets {
    main {
        java {
            srcDirs += ["src/main/gen"]
        }
    }
}

apply plugin: 'org.jetbrains.intellij'

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
}


test {
    useJUnitPlatform()
}

Properties properties = new Properties()
properties.load(project.rootProject.file("local.properties").newDataInputStream())

sourceCompatibility = 1.8
targetCompatibility = 1.8

version pluginVersion
group pluginGroup

jar {
    archiveName 'intellij-latte-' + version + '.jar'
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

//runIde {
//    ideDirectory "${properties.getProperty('runIdeDirectory')}"
//}

def htmlFixer = { htmlFile -> file(htmlFile).text.replace('<html>', '').replace('</html>', '') }

patchPluginXml {
    changeNotes = htmlFixer('src/main/resources/META-INF/CHANGELOG.old.html')
}

intellij {
    setVersion(ideaVersion)
    plugins = [
            "com.jetbrains.php:${phpPluginVersion}",
            'java',
            'properties'
    ]
    setPluginName('Latte')
}

repositories {
    mavenCentral()
    maven { url = 'https://mvnrepository.com/artifact/org.hamcrest/hamcrest-core' }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    flatDir {
        dirs 'libs'
    }
}

apply plugin: 'org.jetbrains.grammarkit'

grammarKit {
    jflexRelease = "1.7.0-1"
    grammarKitRelease = "2021.1.2"
    intellijRelease = "203.7717.81"
}

buildSearchableOptions {
    enabled = false // this will fix java.lang.Throwable caused by buildSearchableOptions - https://youtrack.jetbrains.com/issue/KTIJ-782
}

tasks.register('generateLatteParser', GenerateParserTask) {
    source = "src/main/java/com/jantvrdik/intellij/latte/parser/LatteParser.bnf"
    targetRoot = "src/main/gen"
    pathToParser = '/com/jantvrdik/intellij/latte/parser/LatteParser.java'
    pathToPsiRoot = '/com/jantvrdik/intellij/latte/psi'
    purgeOldFiles = true
}

tasks.register('generateLatteLexer', GenerateLexerTask) {
    source = "src/main/java/com/jantvrdik/intellij/latte/parser/_LatteLexer.flex"
    targetDir = "src/main/gen/com/jantvrdik/intellij/latte/parser/"
    targetClass = "_LatteLexer"
    purgeOldFiles = true
}

tasks.register('generateLatteMacroContentLexer', GenerateLexerTask) {
    source = "src/main/java/com/jantvrdik/intellij/latte/lexer/grammars/LatteMacroContentLexer.flex"
    targetDir = "src/main/gen/com/jantvrdik/intellij/latte/lexer/"
    targetClass = "LatteMacroContentLexer"
    purgeOldFiles = true
}

tasks.register('generateLatteMacroLexer', GenerateLexerTask) {
    source = "src/main/java/com/jantvrdik/intellij/latte/lexer/grammars/LatteMacroLexer.flex"
    targetDir = "src/main/gen/com/jantvrdik/intellij/latte/lexer/"
    targetClass = "LatteMacroLexer"
    purgeOldFiles = true
}

tasks.register('generateLatteTopLexer', GenerateLexerTask) {
    source = "src/main/java/com/jantvrdik/intellij/latte/lexer/grammars/LatteTopLexer.flex"
    targetDir = "src/main/gen/com/jantvrdik/intellij/latte/lexer/"
    targetClass = "LatteTopLexer"
    purgeOldFiles = true
}

tasks.register('generateLattePhpLexer', GenerateLexerTask) {
    source = "src/main/java/com/jantvrdik/intellij/latte/lexer/grammars/LattePhpLexer.flex"
    targetDir = "src/main/gen/com/jantvrdik/intellij/latte/lexer/"
    targetClass = "LattePhpLexer"
    purgeOldFiles = true
}

tasks.register('generateFlexFiles') {
    println('Generating Classes (Lexer)')
    dependsOn(generateLatteParser)
    dependsOn(generateLatteLexer)
    dependsOn(generateLatteMacroContentLexer)
    dependsOn(generateLatteMacroLexer)
    dependsOn(generateLattePhpLexer)
    dependsOn(generateLatteTopLexer)
}

compileJava.dependsOn(generateFlexFiles)
